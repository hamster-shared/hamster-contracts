{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x176a0e58C03f163eAe3C1726Cc80aF64C7722267",
    "txHash": "0x0a20cdc220badc5fab7567de76dd214aaa6dccbaa2770c0c5b75c1420380eb98"
  },
  "proxies": [
    {
      "address": "0x1AD257a34893b36F7A0D684DfB0bb73473126d7f",
      "txHash": "0xbd272a601ca470d1bfb71445e4709919a8676265614cf2d0be5a20bcbd8b673e",
      "kind": "transparent"
    },
    {
      "address": "0xd6De25BB6A141C988C622D29a51723B7EeCeC760",
      "txHash": "0x586b0f214851f4a1a178227e887ebf8756be62b4335927cf95fdb85cdeb3c48a",
      "kind": "transparent"
    },
    {
      "address": "0x9485515282Db49308c99b2a4520D893CbB274547",
      "txHash": "0xdb8cbf7450ec57959ddc8cd0c12799df6584db8a9c3da76927672d0f9226eed3",
      "kind": "transparent"
    },
    {
      "address": "0xE677d4fb2Bc429502E830359c964fF44d7f5111B",
      "txHash": "0x791010e2f4ebd8534eaa2a5a462cbad49538a2af9c12d49174bd0b7cf615f2f4",
      "kind": "transparent"
    },
    {
      "address": "0xaC244cF4cD0253Ff1E61A1bf0c96452AE8B0f523",
      "txHash": "0xefd449053e37dd3a11315eb550d9c6d02bfb681d4242d02e78dc7be818095b87",
      "kind": "transparent"
    },
    {
      "address": "0x4Be0D5b0059Ba37d897CcAD4d8e888b595fA2c70",
      "txHash": "0x3eb035214ddf6fb71a5737010cf7914b97c955dbcbc35f4f11d584c9af4c30b6",
      "kind": "transparent"
    }
  ],
  "impls": {
    "a77ff57950189473ecf7d2e9092c2d48236624928cb42c4cc0aadd6016ae82d9": {
      "address": "0xfD0bC0b6De44F0D877F2929dE2C9cFF0B3e24E2b",
      "txHash": "0xe49f098e072c16f65815b4a1380f80f591b41c85ca97a6f6052b6c783c547887",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:247"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)2833_storage)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20BurnableUpgradeable.sol:51"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC20PresetMinterPauserUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\presets\\ERC20PresetMinterPauserUpgradeable.sol:110"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2833_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)2833_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2532_storage"
              }
            ]
          },
          "t_struct(Set)2532_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "373e5fdcd5937d2b7320e2f4b69ee62abab23417a928d030088aa3cf05261955": {
      "address": "0x56d75ac876752053D15e015D3007e389BaE08CCA",
      "txHash": "0x8cce429c181fe6a5576b26f8d7e7a5af9785356004422ffe04c22b57caf12b7c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "Config",
            "label": "allocationProportion",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\config\\Config.sol:9"
          },
          {
            "contract": "Config",
            "label": "graphStakingAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\config\\Config.sol:12"
          },
          {
            "contract": "Config",
            "label": "grtTokenAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\config\\Config.sol:15"
          },
          {
            "contract": "Config",
            "label": "thawingTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\config\\Config.sol:18"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4b3f1732dc506cacedf55a7c106ebefbcda20b9671292470f91896cea68dc697": {
      "address": "0xE677d4fb2Bc429502E830359c964fF44d7f5111B",
      "txHash": "0x9e1e705c8895dc4c312c96da8fa054ce8e316a6bb3f942ea1f2e42ad0505e88e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "HamsterPool",
            "label": "hamsterHolderStaking",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:14"
          },
          {
            "contract": "HamsterPool",
            "label": "hamsterHolderWithdrawTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:16"
          },
          {
            "contract": "HamsterPool",
            "label": "hamsterTokensAll",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:19"
          },
          {
            "contract": "HamsterPool",
            "label": "distributionStakingMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:21"
          },
          {
            "contract": "HamsterPool",
            "label": "withdrawGrtMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:23"
          },
          {
            "contract": "HamsterPool",
            "label": "distributionTokens",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:26"
          },
          {
            "contract": "HamsterPool",
            "label": "stakingAccount",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:29"
          },
          {
            "contract": "HamsterPool",
            "label": "_configContract",
            "type": "t_contract(Config)5553",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:31"
          },
          {
            "contract": "HamsterPool",
            "label": "token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(Config)5553": {
            "label": "contract Config"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6c528bbe67508187c4bdb486df7e9686530870443aaf324ea181934ae6f95b12": {
      "address": "0x1AD257a34893b36F7A0D684DfB0bb73473126d7f",
      "txHash": "0x19f2ba024ce33c5c9a800300577b223f618bf899642e76867078ae90f3f6dd47",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Config",
            "label": "allocationProportion",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\config\\Config.sol:10"
          },
          {
            "contract": "Config",
            "label": "graphStakingAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\config\\Config.sol:13"
          },
          {
            "contract": "Config",
            "label": "grtTokenAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\config\\Config.sol:16"
          },
          {
            "contract": "Config",
            "label": "thawingTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\config\\Config.sol:19"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4d568b00c90356bbf19e10a9f857ccfca48dc084a256afb964acc1320e6e6322": {
      "address": "0x025ad4142CE55D029de4466e2a8BE39BcD62Ec16",
      "txHash": "0x73c139946a0da658b2d253b26434d19ed6c7e7df035a522b89736569eb26d27c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "HamsterPool",
            "label": "hamsterHolderStaking",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:14"
          },
          {
            "contract": "HamsterPool",
            "label": "hamsterHolderWithdrawTime",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:16"
          },
          {
            "contract": "HamsterPool",
            "label": "hamsterTokensAll",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:19"
          },
          {
            "contract": "HamsterPool",
            "label": "distributionStakingMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:21"
          },
          {
            "contract": "HamsterPool",
            "label": "withdrawGrtMap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:23"
          },
          {
            "contract": "HamsterPool",
            "label": "distributionTokens",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:26"
          },
          {
            "contract": "HamsterPool",
            "label": "stakingAccount",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:29"
          },
          {
            "contract": "HamsterPool",
            "label": "_configContract",
            "type": "t_contract(Config)5682",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:31"
          },
          {
            "contract": "HamsterPool",
            "label": "token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\thegraph\\HamsterPool.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(Config)5682": {
            "label": "contract Config"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "34fe8c214b0d67fa6f0c263c1fe117e89889a51aae51819c9cfc91c5747c9f79": {
      "address": "0x94B215A3504040F199F2c236B514bB8C9D8F3f39",
      "txHash": "0x0cc9e30c4846a69e4b23019b0f1e5fdce19a89ffef6e1b339a1d2d3f68b4571a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "StakingProxyFactory",
            "label": "stakingAddress",
            "type": "t_mapping(t_address,t_address)",
            "src": "..\\project:\\contracts\\thegraph\\StakingProxyFactory.sol:12"
          },
          {
            "contract": "StakingProxyFactory",
            "label": "configAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\thegraph\\StakingProxyFactory.sol:15"
          },
          {
            "contract": "StakingProxyFactory",
            "label": "hamsterPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\thegraph\\StakingProxyFactory.sol:17"
          }
        ],
        "types": {
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
