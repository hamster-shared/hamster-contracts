{
  "contractName": "StakingProxyFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_configAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_hamsterPoolAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_indexerWalletAddress",
          "type": "address"
        }
      ],
      "name": "createStakingContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_indexerWalletAddress",
          "type": "address"
        }
      ],
      "name": "getStakingAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexerWalletAddress\",\"type\":\"address\"}],\"name\":\"createStakingContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexerWalletAddress\",\"type\":\"address\"}],\"name\":\"getStakingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_configAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_hamsterPoolAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/thegraph/StakingProxyFactory.sol\":\"StakingProxyFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c7bba29bcab7240cdaada7dd7cbe3529fec83314801270c46239e72a9e84d7\",\"dweb:/ipfs/QmfHCc1KMygjXchXVwafWTkFjhbb2SQ3Cu5GzRTdV4CCCh\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x7454006cccb737612b00104d2f606d728e2818b778e7e55542f063c614ce46ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec10894beb0f7537fba35e501fd1c5d35440e8c8f5ced1b8e57722a1d0879a8\",\"dweb:/ipfs/Qmbc3bNmtDewTGSmrPD93Ubp8saAz8xCxsgTjSmpNTqukz\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37e4df53c8d2e3c1062c1c7b2c17366db7de03bfd2559d340ca95c588aa49c2f\",\"dweb:/ipfs/QmQ9vsG3o4wED3FRogiSUhdzJvZSjjYFtydzXvFEJtgZk4\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/contracts/config/Config.sol\":{\"keccak256\":\"0x4630a002033b0b209b7cdb516c7c02490752947d4beca43e3ee0292e5dbdfcca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c036257d276d716aad5ac39fa394e90191c429054345042390fb4946f53fd60\",\"dweb:/ipfs/QmfK8vB1KQVvGAqUma5e3fUihtjfdduYTVgkQX8spSbJF6\"]},\"project:/contracts/lib/SafeMath.sol\":{\"keccak256\":\"0x0549cb4828f229ef440285f5e1d248827606e1e608b5fe5635b9ab98d3b9c0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f40d1e4cfd810b9188bda2179215539fca20c5724caa8c04e15d2d701b0bdd\",\"dweb:/ipfs/QmZD858iSGXTaGf7uCjzhaetDBqg2SWspdmgXNZeX3mgeg\"]},\"project:/contracts/thegraph/IHamsterPool.sol\":{\"keccak256\":\"0xbd4dfc502d1a5587f33c5a6f95be6c03631cfe0d2ce117a18a23d74f959ab553\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://436aa5d80c0ef0507c05db8a64c9b57cafbb9b08857b3a0ff92577973600b3b2\",\"dweb:/ipfs/QmPinGfEAd2YkGcE9ijZPJ7wNS78zCGFFb9k6zWajHNsfJ\"]},\"project:/contracts/thegraph/IStaking.sol\":{\"keccak256\":\"0xa21ffae2cf4a5e9947db408d8d4f91c822ec39128804ff72129b7446947ba861\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e0a19018eb51aa5a4a135d1c9a2e5342f99d5630c5f676bf67fb75c3c7778d6\",\"dweb:/ipfs/QmaRf5dzQdZLGAr9bL8erDJ1mPc6PHLoXXV2gyNTsrjgv1\"]},\"project:/contracts/thegraph/IStakingData.sol\":{\"keccak256\":\"0xf4e4c6d81c54380720f7c8064d02440b1531f784d025a693abac93a3930aefb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://58cef23dc977a8f6d97092d5df926752185f648e9e8011fa3be8eb0b7d97c315\",\"dweb:/ipfs/QmawB5Eu3H5B6SzQDpiDTmdAdahz1DCagqtduMReUbo9HU\"]},\"project:/contracts/thegraph/IStakingDistributionProxy.sol\":{\"keccak256\":\"0x4f15d5dc4c3c589f14f16563d71eed5613dfe11085ce15bbe45feafa1234df8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2b1cc7f6767bb57da5ea2aea8094297eb6612ce01172fda5e53bab055a161c9\",\"dweb:/ipfs/QmdwhuqgPmjDZo1GRweoMiFWLi8Ee3oC2z9xYgkEjbwYM8\"]},\"project:/contracts/thegraph/IStakingProxyFactory.sol\":{\"keccak256\":\"0x3c61f0198abb3805b5a5be578a990a84c6cb66427c5e6c298951aca2fe7d7eab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d88839fcefde955165ce4bffe3e13610c3ce4137254f6291851e7601e9e977b\",\"dweb:/ipfs/QmWz9F41FfrkuxGKCT38qK72886nd71gjmWq68tYidEuRV\"]},\"project:/contracts/thegraph/StakingDistributionProxy.sol\":{\"keccak256\":\"0xf001cb57c0b4a766896d60ec2bf8db69b28e3d8f73973edb2215f26f51c295ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e2a1084951ea0b55fb34d612d9e3ae83146be71e944923a21df61e4fd28b8bb\",\"dweb:/ipfs/QmU9PxEr7nz7CtayE8nn4ByJ4NY5PHwUv6AMFpuMMHto3q\"]},\"project:/contracts/thegraph/StakingProxyFactory.sol\":{\"keccak256\":\"0xf30342f64599d23dc590d12fb6c17facbc9b06c5bd60f6eafad1f9c3601e8bf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43424ac44817a1b959583d0fd7c708f41ae95f8b4461368578f5a03b1c1978fe\",\"dweb:/ipfs/QmZTGzDs453nhgDxxCd7GMYwUpuT249RwmtVgDnQhsRafh\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612451806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063485cc955146100465780634a4cef401461005b5780637465cf971461006e575b600080fd5b6100596100543660046103a4565b6100b6565b005b6100596100693660046103dd565b610155565b61009a61007c3660046103dd565b6001600160a01b039081166000908152600160205260409020541690565b6040516001600160a01b03909116815260200160405180910390f35b60006100c260016102f7565b905080156100da576000805461ff0019166101001790555b600280546001600160a01b038086166001600160a01b03199283161790925560038054928516929091169190911790558015610150576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b0381811660009081526001602052604090205416156101c25760405162461bcd60e51b815260206004820152601d60248201527f54686973206164647265737320686173206265656e20706c656467656400000060448201526064015b60405180910390fd5b6000816040516101d19061037f565b6001600160a01b039091168152602001604051809103906000f0801580156101fd573d6000803e3d6000fd5b509050806001600160a01b03166343a73d9a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102629190610401565b6001600160a01b038381166000908152600160205260409081902080546001600160a01b031916938316939093179092556002546003549251631a5c4b7960e11b8152908216600482015291811660248301528216906334b896f290604401600060405180830381600087803b1580156102db57600080fd5b505af11580156102ef573d6000803e3d6000fd5b505050505050565b60008054610100900460ff161561033e578160ff16600114801561031a5750303b155b6103365760405162461bcd60e51b81526004016101b99061041e565b506000919050565b60005460ff8084169116106103655760405162461bcd60e51b81526004016101b99061041e565b506000805460ff191660ff92909216919091179055600190565b611faf8061046d83390190565b6001600160a01b03811681146103a157600080fd5b50565b600080604083850312156103b757600080fd5b82356103c28161038c565b915060208301356103d28161038c565b809150509250929050565b6000602082840312156103ef57600080fd5b81356103fa8161038c565b9392505050565b60006020828403121561041357600080fd5b81516103fa8161038c565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fe6080604052604051611faf380380611faf83398101604081905261002291610047565b600080546001600160a01b0319166001600160a01b0392909216919091179055610077565b60006020828403121561005957600080fd5b81516001600160a01b038116811461007057600080fd5b9392505050565b611f29806100866000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806343d342a1116100ad578063b90bbf7b11610071578063b90bbf7b14610259578063b951340814610261578063ced066c914610269578063e44ad80c14610271578063f247e3de1461028457600080fd5b806343d342a1146101f3578063558a729714610206578063716752fa14610219578063ac06f36614610221578063b6ba3e131461022957600080fd5b806334b896f2116100f457806334b896f21461017157806338cc4831146101ad5780633ccfd60b146101d25780633f230872146101da57806343a73d9a146101ed57600080fd5b806312065fe0146101265780631a0fa8c3146101415780631dbb2a221461014b5780632e17de781461015e575b600080fd5b61012e61028c565b6040519081526020015b60405180910390f35b610149610377565b005b610149610159366004611cd4565b6106eb565b61014961016c366004611cd4565b610c17565b61014961017f366004611d05565b600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610138565b610149610d56565b6101496101e8366004611cd4565b600155565b306101ba565b610149610201366004611cd4565b610f71565b610149610214366004611d4c565b6113c9565b6101ba6114a3565b61012e611516565b610149610237366004611d7a565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6101496116b9565b60055461012e565b60015461012e565b61014961027f366004611cd4565b611786565b61012e611a4a565b600080600360009054906101000a90046001600160a01b03166001600160a01b0316632053065f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190611d97565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa15801561034d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103719190611db4565b91505090565b60035460408051632053065f60e01b815290516000926001600160a01b031691632053065f9160048083019260209291908290030181865afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190611d97565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561042f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104539190611db4565b90506000811161047e5760405162461bcd60e51b815260040161047590611dcd565b60405180910390fd5b600354604080516316522e2d60e01b815290516000926001600160a01b0316916316522e2d9160048083019260209291908290030181865afa1580156104c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ec9190611db4565b9050600061050560646104ff8585611bde565b90611c69565b905060006105138285611e11565b60005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925086169063a9059cbb906044016020604051808303816000875af1158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190611e28565b61059557600080fd5b600480546040805163f586c6d960e01b815290516001600160a01b03808a169463095ea7b3949091169263f586c6d992818301926020928290030181865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106099190611d97565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190611e28565b5060048054604051600162b5c93960e01b031981523092810192909252602482018490526001600160a01b03169063ff4a36c7906044015b600060405180830381600087803b1580156106cc57600080fd5b505af11580156106e0573d6000803e3d6000fd5b505050505050505050565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610738906020808252600b908201526a18d85b1b081b595d1a1bd960aa1b604082015260600190565b60405180910390a16000811161077a5760405162461bcd60e51b815260206004820152600760248201526621746f6b656e7360c81b6044820152606401610475565b60035460408051632053065f60e01b815290516000926001600160a01b031691632053065f9160048083019260209291908290030181865afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e89190611d97565b600080546040516370a0823160e01b81526001600160a01b0391821660048201529293509091908316906370a0823190602401602060405180830381865afa158015610838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085c9190611db4565b9050828110156108ae5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74206163636f756e742062616c616e6365000000006044820152606401610475565b6000546040516323b872dd60e01b81526001600160a01b03918216600482015230602482015260448101859052908316906323b872dd906064016020604051808303816000875af1158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b9190611e28565b6109775760405162461bcd60e51b815260206004820181905260248201527f7374616b696e673a20696e6465786572207472616e73666572206661696c65646044820152606401610475565b6000826001600160a01b031663095ea7b3600360009054906101000a90046001600160a01b03166001600160a01b0316634c94f61a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ff9190611d97565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303816000875af1158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190611e28565b9050600181151514610ab55760405162461bcd60e51b815260206004820152600e60248201526d185c1c1c9bdd994819985a5b195960921b6044820152606401610475565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b239190611d97565b60405163534a7e1d60e11b8152600481018790529091506001600160a01b0382169063a694fc3a90602401600060405180830381600087803b158015610b6857600080fd5b505af1158015610b7c573d6000803e3d6000fd5b505050600186815560005460405163558a729760e01b81526001600160a01b03918216600482015260248101929092528316915063558a729790604401600060405180830381600087803b158015610bd357600080fd5b505af1158015610be7573d6000803e3d6000fd5b505060405163772495c360e01b81523060048201526001600160a01b038416925063772495c391506024016106b2565b60015481600554610c289190611e45565b1115610c765760405162461bcd60e51b815260206004820181905260248201527f776974686472617720616d6f756e74203e207374616b696e6720616d6f756e746044820152606401610475565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015610cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce49190611d97565b6040516305c2fbcf60e31b8152600481018490529091506001600160a01b03821690632e17de7890602401600060405180830381600087803b158015610d2957600080fd5b505af1158015610d3d573d6000803e3d6000fd5b5050505081600554610d4f9190611e45565b6005555050565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015610da0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc49190611d97565b9050806001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e0157600080fd5b505af1158015610e15573d6000803e3d6000fd5b50505050600360009054906101000a90046001600160a01b03166001600160a01b0316632053065f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e909190611d97565b60005460055460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0a9190611e28565b610f565760405162461bcd60e51b815260206004820181905260248201527f7769746864726177207472616e7366657220696e6465786572206661696c65646044820152606401610475565b600554600154610f669190611e11565b600155506000600555565b60008111610fab5760405162461bcd60e51b815260206004820152600760248201526621746f6b656e7360c81b6044820152606401610475565b60035460408051632053065f60e01b815290516000926001600160a01b031691632053065f9160048083019260209291908290030181865afa158015610ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110199190611d97565b600080546040516370a0823160e01b81526001600160a01b0391821660048201529293509091908316906370a0823190602401602060405180830381865afa158015611069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108d9190611db4565b9050828110156110df5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74206163636f756e742062616c616e6365000000006044820152606401610475565b6000826001600160a01b031663095ea7b3600360009054906101000a90046001600160a01b03166001600160a01b0316634c94f61a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611143573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111679190611d97565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303816000875af11580156111b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d89190611e28565b905060018115151461121d5760405162461bcd60e51b815260206004820152600e60248201526d185c1c1c9bdd994819985a5b195960921b6044820152606401610475565b6000546040516323b872dd60e01b81526001600160a01b03918216600482015230602482015260448101869052908416906323b872dd906064016020604051808303816000875af1158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a9190611e28565b6112e65760405162461bcd60e51b815260206004820181905260248201527f7374616b696e673a20696e6465786572207472616e73666572206661696c65646044820152606401610475565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015611330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113549190611d97565b60405163534a7e1d60e11b8152600481018790529091506001600160a01b0382169063a694fc3a90602401600060405180830381600087803b15801561139957600080fd5b505af11580156113ad573d6000803e3d6000fd5b50505050846001546113bf9190611e45565b6001555050505050565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015611413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114379190611d97565b60405163558a729760e01b81526001600160a01b03858116600483015284151560248301529192509082169063558a729790604401600060405180830381600087803b15801561148657600080fd5b505af115801561149a573d6000803e3d6000fd5b50505050505050565b60035460408051632053065f60e01b815290516000926001600160a01b031691632053065f9160048083019260209291908290030181865afa1580156114ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115119190611d97565b905090565b600080600360009054906101000a90046001600160a01b03166001600160a01b0316632053065f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561156c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115909190611d97565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156115da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fe9190611db4565b9050600081116116205760405162461bcd60e51b815260040161047590611dcd565b600354604080516316522e2d60e01b815290516000926001600160a01b0316916316522e2d9160048083019260209291908290030181865afa15801561166a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168e9190611db4565b905060006116a160646104ff8585611bde565b905060006116af8285611e11565b9695505050505050565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015611703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117279190611d97565b60405163772495c360e01b81523060048201529091506001600160a01b0382169063772495c390602401600060405180830381600087803b15801561176b57600080fd5b505af115801561177f573d6000803e3d6000fd5b5050505050565b6001548111156117d85760405162461bcd60e51b815260206004820181905260248201527f776974686472617720616d6f756e74203e207374616b696e6720616d6f756e746044820152606401610475565b60035460408051632053065f60e01b815290516000926001600160a01b031691632053065f9160048083019260209291908290030181865afa158015611822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118469190611d97565b90506000600360009054906101000a90046001600160a01b03166001600160a01b0316634c94f61a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561189d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c19190611d97565b6040516305c2fbcf60e31b8152600481018590529091506001600160a01b03821690632e17de7890602401600060405180830381600087803b15801561190657600080fd5b505af115801561191a573d6000803e3d6000fd5b50505050806001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561195957600080fd5b505af115801561196d573d6000803e3d6000fd5b505060005460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101879052908516925063a9059cbb91506044016020604051808303816000875af11580156119c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e89190611e28565b611a345760405162461bcd60e51b815260206004820181905260248201527f7769746864726177207472616e7366657220696e6465786572206661696c65646044820152606401610475565b82600154611a429190611e11565b600155505050565b600080600360009054906101000a90046001600160a01b03166001600160a01b0316632053065f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac49190611d97565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b329190611db4565b905060008111611b545760405162461bcd60e51b815260040161047590611dcd565b600354604080516316522e2d60e01b815290516000926001600160a01b0316916316522e2d9160048083019260209291908290030181865afa158015611b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc29190611db4565b90506000611bd560646104ff8585611bde565b95945050505050565b600082600003611bf057506000611c63565b6000611bfc8385611e5d565b905082611c098583611e7c565b14611c605760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610475565b90505b92915050565b6000611c6083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060008183611cc75760405162461bcd60e51b81526004016104759190611e9e565b506000611bd58486611e7c565b600060208284031215611ce657600080fd5b5035919050565b6001600160a01b0381168114611d0257600080fd5b50565b60008060408385031215611d1857600080fd5b8235611d2381611ced565b91506020830135611d3381611ced565b809150509250929050565b8015158114611d0257600080fd5b60008060408385031215611d5f57600080fd5b8235611d6a81611ced565b91506020830135611d3381611d3e565b600060208284031215611d8c57600080fd5b8135611c6081611ced565b600060208284031215611da957600080fd5b8151611c6081611ced565b600060208284031215611dc657600080fd5b5051919050565b6020808252601490820152734e6f20696e636f6d6520746f207265636569766560601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015611e2357611e23611dfb565b500390565b600060208284031215611e3a57600080fd5b8151611c6081611d3e565b60008219821115611e5857611e58611dfb565b500190565b6000816000190483118215151615611e7757611e77611dfb565b500290565b600082611e9957634e487b7160e01b600052601260045260246000fd5b500490565b600060208083528351808285015260005b81811015611ecb57858101830151858201604001528201611eaf565b81811115611edd576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220baca93137c9cb91e118ac5100736b2f43ade55157b6c8fd25a333015458091b964736f6c634300080f0033a2646970667358221220431279f5501ad4618d9b5ca25853382978f91f50c64d9d76f9a420101eef370a64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063485cc955146100465780634a4cef401461005b5780637465cf971461006e575b600080fd5b6100596100543660046103a4565b6100b6565b005b6100596100693660046103dd565b610155565b61009a61007c3660046103dd565b6001600160a01b039081166000908152600160205260409020541690565b6040516001600160a01b03909116815260200160405180910390f35b60006100c260016102f7565b905080156100da576000805461ff0019166101001790555b600280546001600160a01b038086166001600160a01b03199283161790925560038054928516929091169190911790558015610150576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b0381811660009081526001602052604090205416156101c25760405162461bcd60e51b815260206004820152601d60248201527f54686973206164647265737320686173206265656e20706c656467656400000060448201526064015b60405180910390fd5b6000816040516101d19061037f565b6001600160a01b039091168152602001604051809103906000f0801580156101fd573d6000803e3d6000fd5b509050806001600160a01b03166343a73d9a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561023e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102629190610401565b6001600160a01b038381166000908152600160205260409081902080546001600160a01b031916938316939093179092556002546003549251631a5c4b7960e11b8152908216600482015291811660248301528216906334b896f290604401600060405180830381600087803b1580156102db57600080fd5b505af11580156102ef573d6000803e3d6000fd5b505050505050565b60008054610100900460ff161561033e578160ff16600114801561031a5750303b155b6103365760405162461bcd60e51b81526004016101b99061041e565b506000919050565b60005460ff8084169116106103655760405162461bcd60e51b81526004016101b99061041e565b506000805460ff191660ff92909216919091179055600190565b611faf8061046d83390190565b6001600160a01b03811681146103a157600080fd5b50565b600080604083850312156103b757600080fd5b82356103c28161038c565b915060208301356103d28161038c565b809150509250929050565b6000602082840312156103ef57600080fd5b81356103fa8161038c565b9392505050565b60006020828403121561041357600080fd5b81516103fa8161038c565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fe6080604052604051611faf380380611faf83398101604081905261002291610047565b600080546001600160a01b0319166001600160a01b0392909216919091179055610077565b60006020828403121561005957600080fd5b81516001600160a01b038116811461007057600080fd5b9392505050565b611f29806100866000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806343d342a1116100ad578063b90bbf7b11610071578063b90bbf7b14610259578063b951340814610261578063ced066c914610269578063e44ad80c14610271578063f247e3de1461028457600080fd5b806343d342a1146101f3578063558a729714610206578063716752fa14610219578063ac06f36614610221578063b6ba3e131461022957600080fd5b806334b896f2116100f457806334b896f21461017157806338cc4831146101ad5780633ccfd60b146101d25780633f230872146101da57806343a73d9a146101ed57600080fd5b806312065fe0146101265780631a0fa8c3146101415780631dbb2a221461014b5780632e17de781461015e575b600080fd5b61012e61028c565b6040519081526020015b60405180910390f35b610149610377565b005b610149610159366004611cd4565b6106eb565b61014961016c366004611cd4565b610c17565b61014961017f366004611d05565b600380546001600160a01b039384166001600160a01b03199182161790915560048054929093169116179055565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610138565b610149610d56565b6101496101e8366004611cd4565b600155565b306101ba565b610149610201366004611cd4565b610f71565b610149610214366004611d4c565b6113c9565b6101ba6114a3565b61012e611516565b610149610237366004611d7a565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6101496116b9565b60055461012e565b60015461012e565b61014961027f366004611cd4565b611786565b61012e611a4a565b600080600360009054906101000a90046001600160a01b03166001600160a01b0316632053065f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103069190611d97565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa15801561034d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103719190611db4565b91505090565b60035460408051632053065f60e01b815290516000926001600160a01b031691632053065f9160048083019260209291908290030181865afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190611d97565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561042f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104539190611db4565b90506000811161047e5760405162461bcd60e51b815260040161047590611dcd565b60405180910390fd5b600354604080516316522e2d60e01b815290516000926001600160a01b0316916316522e2d9160048083019260209291908290030181865afa1580156104c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ec9190611db4565b9050600061050560646104ff8585611bde565b90611c69565b905060006105138285611e11565b60005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925086169063a9059cbb906044016020604051808303816000875af1158015610568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058c9190611e28565b61059557600080fd5b600480546040805163f586c6d960e01b815290516001600160a01b03808a169463095ea7b3949091169263f586c6d992818301926020928290030181865afa1580156105e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106099190611d97565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a9190611e28565b5060048054604051600162b5c93960e01b031981523092810192909252602482018490526001600160a01b03169063ff4a36c7906044015b600060405180830381600087803b1580156106cc57600080fd5b505af11580156106e0573d6000803e3d6000fd5b505050505050505050565b7fcf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab604051610738906020808252600b908201526a18d85b1b081b595d1a1bd960aa1b604082015260600190565b60405180910390a16000811161077a5760405162461bcd60e51b815260206004820152600760248201526621746f6b656e7360c81b6044820152606401610475565b60035460408051632053065f60e01b815290516000926001600160a01b031691632053065f9160048083019260209291908290030181865afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e89190611d97565b600080546040516370a0823160e01b81526001600160a01b0391821660048201529293509091908316906370a0823190602401602060405180830381865afa158015610838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085c9190611db4565b9050828110156108ae5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74206163636f756e742062616c616e6365000000006044820152606401610475565b6000546040516323b872dd60e01b81526001600160a01b03918216600482015230602482015260448101859052908316906323b872dd906064016020604051808303816000875af1158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b9190611e28565b6109775760405162461bcd60e51b815260206004820181905260248201527f7374616b696e673a20696e6465786572207472616e73666572206661696c65646044820152606401610475565b6000826001600160a01b031663095ea7b3600360009054906101000a90046001600160a01b03166001600160a01b0316634c94f61a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ff9190611d97565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303816000875af1158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a709190611e28565b9050600181151514610ab55760405162461bcd60e51b815260206004820152600e60248201526d185c1c1c9bdd994819985a5b195960921b6044820152606401610475565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b239190611d97565b60405163534a7e1d60e11b8152600481018790529091506001600160a01b0382169063a694fc3a90602401600060405180830381600087803b158015610b6857600080fd5b505af1158015610b7c573d6000803e3d6000fd5b505050600186815560005460405163558a729760e01b81526001600160a01b03918216600482015260248101929092528316915063558a729790604401600060405180830381600087803b158015610bd357600080fd5b505af1158015610be7573d6000803e3d6000fd5b505060405163772495c360e01b81523060048201526001600160a01b038416925063772495c391506024016106b2565b60015481600554610c289190611e45565b1115610c765760405162461bcd60e51b815260206004820181905260248201527f776974686472617720616d6f756e74203e207374616b696e6720616d6f756e746044820152606401610475565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015610cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce49190611d97565b6040516305c2fbcf60e31b8152600481018490529091506001600160a01b03821690632e17de7890602401600060405180830381600087803b158015610d2957600080fd5b505af1158015610d3d573d6000803e3d6000fd5b5050505081600554610d4f9190611e45565b6005555050565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015610da0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc49190611d97565b9050806001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610e0157600080fd5b505af1158015610e15573d6000803e3d6000fd5b50505050600360009054906101000a90046001600160a01b03166001600160a01b0316632053065f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e909190611d97565b60005460055460405163a9059cbb60e01b81526001600160a01b039283166004820152602481019190915291169063a9059cbb906044016020604051808303816000875af1158015610ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0a9190611e28565b610f565760405162461bcd60e51b815260206004820181905260248201527f7769746864726177207472616e7366657220696e6465786572206661696c65646044820152606401610475565b600554600154610f669190611e11565b600155506000600555565b60008111610fab5760405162461bcd60e51b815260206004820152600760248201526621746f6b656e7360c81b6044820152606401610475565b60035460408051632053065f60e01b815290516000926001600160a01b031691632053065f9160048083019260209291908290030181865afa158015610ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110199190611d97565b600080546040516370a0823160e01b81526001600160a01b0391821660048201529293509091908316906370a0823190602401602060405180830381865afa158015611069573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108d9190611db4565b9050828110156110df5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74206163636f756e742062616c616e6365000000006044820152606401610475565b6000826001600160a01b031663095ea7b3600360009054906101000a90046001600160a01b03166001600160a01b0316634c94f61a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611143573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111679190611d97565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303816000875af11580156111b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d89190611e28565b905060018115151461121d5760405162461bcd60e51b815260206004820152600e60248201526d185c1c1c9bdd994819985a5b195960921b6044820152606401610475565b6000546040516323b872dd60e01b81526001600160a01b03918216600482015230602482015260448101869052908416906323b872dd906064016020604051808303816000875af1158015611276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129a9190611e28565b6112e65760405162461bcd60e51b815260206004820181905260248201527f7374616b696e673a20696e6465786572207472616e73666572206661696c65646044820152606401610475565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015611330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113549190611d97565b60405163534a7e1d60e11b8152600481018790529091506001600160a01b0382169063a694fc3a90602401600060405180830381600087803b15801561139957600080fd5b505af11580156113ad573d6000803e3d6000fd5b50505050846001546113bf9190611e45565b6001555050505050565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015611413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114379190611d97565b60405163558a729760e01b81526001600160a01b03858116600483015284151560248301529192509082169063558a729790604401600060405180830381600087803b15801561148657600080fd5b505af115801561149a573d6000803e3d6000fd5b50505050505050565b60035460408051632053065f60e01b815290516000926001600160a01b031691632053065f9160048083019260209291908290030181865afa1580156114ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115119190611d97565b905090565b600080600360009054906101000a90046001600160a01b03166001600160a01b0316632053065f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561156c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115909190611d97565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156115da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fe9190611db4565b9050600081116116205760405162461bcd60e51b815260040161047590611dcd565b600354604080516316522e2d60e01b815290516000926001600160a01b0316916316522e2d9160048083019260209291908290030181865afa15801561166a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168e9190611db4565b905060006116a160646104ff8585611bde565b905060006116af8285611e11565b9695505050505050565b6003546040805163264a7b0d60e11b815290516000926001600160a01b031691634c94f61a9160048083019260209291908290030181865afa158015611703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117279190611d97565b60405163772495c360e01b81523060048201529091506001600160a01b0382169063772495c390602401600060405180830381600087803b15801561176b57600080fd5b505af115801561177f573d6000803e3d6000fd5b5050505050565b6001548111156117d85760405162461bcd60e51b815260206004820181905260248201527f776974686472617720616d6f756e74203e207374616b696e6720616d6f756e746044820152606401610475565b60035460408051632053065f60e01b815290516000926001600160a01b031691632053065f9160048083019260209291908290030181865afa158015611822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118469190611d97565b90506000600360009054906101000a90046001600160a01b03166001600160a01b0316634c94f61a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561189d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c19190611d97565b6040516305c2fbcf60e31b8152600481018590529091506001600160a01b03821690632e17de7890602401600060405180830381600087803b15801561190657600080fd5b505af115801561191a573d6000803e3d6000fd5b50505050806001600160a01b0316633ccfd60b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561195957600080fd5b505af115801561196d573d6000803e3d6000fd5b505060005460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101879052908516925063a9059cbb91506044016020604051808303816000875af11580156119c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e89190611e28565b611a345760405162461bcd60e51b815260206004820181905260248201527f7769746864726177207472616e7366657220696e6465786572206661696c65646044820152606401610475565b82600154611a429190611e11565b600155505050565b600080600360009054906101000a90046001600160a01b03166001600160a01b0316632053065f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac49190611d97565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015611b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b329190611db4565b905060008111611b545760405162461bcd60e51b815260040161047590611dcd565b600354604080516316522e2d60e01b815290516000926001600160a01b0316916316522e2d9160048083019260209291908290030181865afa158015611b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc29190611db4565b90506000611bd560646104ff8585611bde565b95945050505050565b600082600003611bf057506000611c63565b6000611bfc8385611e5d565b905082611c098583611e7c565b14611c605760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610475565b90505b92915050565b6000611c6083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060008183611cc75760405162461bcd60e51b81526004016104759190611e9e565b506000611bd58486611e7c565b600060208284031215611ce657600080fd5b5035919050565b6001600160a01b0381168114611d0257600080fd5b50565b60008060408385031215611d1857600080fd5b8235611d2381611ced565b91506020830135611d3381611ced565b809150509250929050565b8015158114611d0257600080fd5b60008060408385031215611d5f57600080fd5b8235611d6a81611ced565b91506020830135611d3381611d3e565b600060208284031215611d8c57600080fd5b8135611c6081611ced565b600060208284031215611da957600080fd5b8151611c6081611ced565b600060208284031215611dc657600080fd5b5051919050565b6020808252601490820152734e6f20696e636f6d6520746f207265636569766560601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015611e2357611e23611dfb565b500390565b600060208284031215611e3a57600080fd5b8151611c6081611d3e565b60008219821115611e5857611e58611dfb565b500190565b6000816000190483118215151615611e7757611e77611dfb565b500290565b600082611e9957634e487b7160e01b600052601260045260246000fd5b500490565b600060208083528351808285015260005b81811015611ecb57858101830151858201604001528201611eaf565b81811115611edd576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220baca93137c9cb91e118ac5100736b2f43ade55157b6c8fd25a333015458091b964736f6c634300080f0033a2646970667358221220431279f5501ad4618d9b5ca25853382978f91f50c64d9d76f9a420101eef370a64736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2537:53",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:53",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:53"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:53",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:53",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:53"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:53"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:53"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:53"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:53"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:53",
                "type": ""
              }
            ],
            "src": "14:131:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "237:301:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "283:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "292:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "295:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "285:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "285:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "285:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "258:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "267:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "254:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "254:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "279:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "250:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "250:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "247:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "308:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "321:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "321:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "312:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "378:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "353:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "393:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "403:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "393:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "417:47:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "449:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "460:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "445:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "445:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "432:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "432:32:53"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "421:7:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "498:7:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "473:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:33:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "473:33:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "515:17:53",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "525:7:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "515:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "195:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "206:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "218:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "226:6:53",
                "type": ""
              }
            ],
            "src": "150:388:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "613:177:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "659:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "668:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "671:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "661:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "661:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "661:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "634:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "643:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "630:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "630:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "655:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "626:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "626:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "623:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "684:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "710:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "697:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "688:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "754:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "729:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "729:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "729:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "769:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "779:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "769:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "579:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "590:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "602:6:53",
                "type": ""
              }
            ],
            "src": "543:247:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "896:102:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "906:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "918:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "929:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "914:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "914:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "906:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "948:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "963:6:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "979:3:53",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "984:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "975:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "975:11:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "988:1:53",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "971:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "971:19:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "959:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "959:32:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "941:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "941:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "941:51:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "865:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "876:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "887:4:53",
                "type": ""
              }
            ],
            "src": "795:203:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1110:87:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1120:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1132:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1143:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1128:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1120:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1162:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1177:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1185:4:53",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1173:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1173:17:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1155:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:36:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1155:36:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1079:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1090:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1101:4:53",
                "type": ""
              }
            ],
            "src": "1003:194:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1376:179:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1393:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1404:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1386:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1386:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1386:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1427:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1438:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1423:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1423:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1443:2:53",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1416:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1416:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1466:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1477:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1462:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1462:18:53"
                      },
                      {
                        "hexValue": "54686973206164647265737320686173206265656e20706c6564676564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1482:31:53",
                        "type": "",
                        "value": "This address has been pledged"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1455:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1455:59:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1455:59:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1523:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1535:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1546:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1531:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1523:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a2d7cd99baf962bf0ca528a755262bb978ede327c758a06ecfaf41cb184445ae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1353:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1367:4:53",
                "type": ""
              }
            ],
            "src": "1202:353:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1641:170:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1687:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1696:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1699:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1689:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1689:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1689:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1662:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1671:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1658:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1658:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1683:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1654:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1654:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1651:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1712:29:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1731:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1725:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1725:16:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1716:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1775:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1750:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1750:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1790:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1800:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1790:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1607:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1618:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1630:6:53",
                "type": ""
              }
            ],
            "src": "1560:251:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1945:175:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1955:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1967:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1963:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1955:4:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1990:29:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2008:3:53",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2013:1:53",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2004:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2004:11:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2017:1:53",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2000:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2000:19:53"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1994:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2035:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2050:6:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2058:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2046:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:15:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2028:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2028:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2028:34:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2082:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2093:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2078:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2078:18:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2102:6:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2110:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2098:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2098:15:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2071:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2071:43:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2071:43:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1906:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1917:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1925:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1936:4:53",
                "type": ""
              }
            ],
            "src": "1816:304:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2299:236:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2316:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2327:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2309:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2309:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2309:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2350:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2361:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2346:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2346:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2366:2:53",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2339:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2339:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2339:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2389:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2400:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2385:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2385:18:53"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2405:34:53",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2378:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2378:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2378:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2460:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2471:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2456:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2456:18:53"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2476:16:53",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2449:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2449:44:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2449:44:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2502:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2514:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2525:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2510:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2510:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2502:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2276:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2290:4:53",
                "type": ""
              }
            ],
            "src": "2125:410:53"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_a2d7cd99baf962bf0ca528a755262bb978ede327c758a06ecfaf41cb184445ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"This address has been pledged\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 53,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "241:1136:47:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "241:1136:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:188;;;;;;:::i;:::-;;:::i;:::-;;759:451;;;;;;:::i;:::-;;:::i;1216:158::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1330:37:47;;;1304:7;1330:37;;;:14;:37;;;;;;;;1216:158;;;;-1:-1:-1;;;;;959:32:53;;;941:51;;929:2;914:18;1216:158:47;;;;;;;525:188;3111:19:5;3133:25;3156:1;3133:22;:25::i;:::-;3111:47;;3172:14;3168:65;;;3202:13;:20;;-1:-1:-1;;3202:20:5;;;;;3168:65;626:13:47::1;:30:::0;;-1:-1:-1;;;;;626:30:47;;::::1;-1:-1:-1::0;;;;;;626:30:47;;::::1;;::::0;;;666:18:::1;:40:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;3253:99:5;;;;3303:5;3287:21;;-1:-1:-1;;3287:21:5;;;3327:14;;-1:-1:-1;1155:36:53;;3327:14:5;;1143:2:53;1128:18;3327:14:5;;;;;;;3253:99;3101:257;525:188:47;;:::o;759:451::-;-1:-1:-1;;;;;854:37:47;;;903:1;854:37;;;:14;:37;;;;;;;:51;846:93;;;;-1:-1:-1;;;846:93:47;;1404:2:53;846:93:47;;;1386:21:53;1443:2;1423:18;;;1416:30;1482:31;1462:18;;;1455:59;1531:18;;846:93:47;;;;;;;;;949:44;1025:21;996:51;;;;;:::i;:::-;-1:-1:-1;;;;;959:32:53;;;941:51;;929:2;914:18;996:51:47;;;;;;;;;;;;;;;;;;;;;;;949:98;;1097:19;-1:-1:-1;;;;;1097:35:47;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1057:37:47;;;;;;;:14;:37;;;;;;;:77;;-1:-1:-1;;;;;;1057:77:47;;;;;;;;;;;1170:13;;1184:18;;1144:59;;-1:-1:-1;;;1144:59:47;;1170:13;;;1144:59;;;2028:34:53;1184:18:47;;;2078::53;;;2071:43;1144:25:47;;;;;1963:18:53;;1144:59:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;836:374;759:451;:::o;5287:808:5:-;5351:4;5684:13;;;;;;;5680:409;;;5738:7;:12;;5749:1;5738:12;:61;;;;-1:-1:-1;5793:4:5;1476:19:13;:23;5738:61:5;5713:166;;;;-1:-1:-1;;;5713:166:5;;;;;;;:::i;:::-;-1:-1:-1;5900:5:5;;5287:808;-1:-1:-1;5287:808:5:o;5680:409::-;5944:12;;:22;;;;:12;;:22;5936:81;;;;-1:-1:-1;;;5936:81:5;;;;;;;:::i;:::-;-1:-1:-1;6031:12:5;:22;;-1:-1:-1;;6031:22:5;;;;;;;;;;;;-1:-1:-1;;5287:808:5:o;-1:-1:-1:-;;;;;;;;:::o;14:131:53:-;-1:-1:-1;;;;;89:31:53;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:388::-;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;-1:-1:-1;460:2:53;445:18;;432:32;473:33;432:32;473:33;:::i;:::-;525:7;515:17;;;150:388;;;;;:::o;543:247::-;602:6;655:2;643:9;634:7;630:23;626:32;623:52;;;671:1;668;661:12;623:52;710:9;697:23;729:31;754:5;729:31;:::i;:::-;779:5;543:247;-1:-1:-1;;;543:247:53:o;1560:251::-;1630:6;1683:2;1671:9;1662:7;1658:23;1654:32;1651:52;;;1699:1;1696;1689:12;1651:52;1731:9;1725:16;1750:31;1775:5;1750:31;:::i;2125:410::-;2327:2;2309:21;;;2366:2;2346:18;;;2339:30;2405:34;2400:2;2385:18;;2378:62;-1:-1:-1;;;2471:2:53;2456:18;;2449:44;2525:3;2510:19;;2125:410::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./StakingDistributionProxy.sol\";\nimport \"../lib/SafeMath.sol\";\nimport \"./IStakingProxyFactory.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract StakingProxyFactory is IStakingProxyFactory,Initializable{\n    using SafeMath for uint256;\n\n    // indexer address => staking contract address\n    mapping(address => address) stakingAddress;\n\n\n    address private configAddress;\n\n    address private hamsterPoolAddress;\n\n\n    function initialize(address _configAddress,address _hamsterPoolAddress) public initializer {\n        configAddress = _configAddress;\n        hamsterPoolAddress = _hamsterPoolAddress;\n    }\n\n    //new staking distribution contract\n    function createStakingContract(address _indexerWalletAddress) public override{\n        require(stakingAddress[_indexerWalletAddress] == address(0), \"This address has been pledged\");\n        StakingDistributionProxy stakingDistribution = new StakingDistributionProxy(_indexerWalletAddress);\n        stakingAddress[_indexerWalletAddress] = stakingDistribution.getProxyAddress();\n        stakingDistribution._init(configAddress,hamsterPoolAddress);\n    }\n\n    function getStakingAddress(address _indexerWalletAddress) public view override returns (address) {\n        return stakingAddress[_indexerWalletAddress];\n    }\n\n}\n",
  "sourcePath": "/home/sunjianguo/GolandProjects/hamster-contracts/contracts/thegraph/StakingProxyFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/thegraph/StakingProxyFactory.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        2220
      ],
      "Config": [
        5685
      ],
      "ContextUpgradeable": [
        2262
      ],
      "IERC20": [
        4435
      ],
      "IHamsterPool": [
        6644
      ],
      "IStaking": [
        6682
      ],
      "IStakingData": [
        6732
      ],
      "IStakingDistributionProxy": [
        6798
      ],
      "IStakingProxyFactory": [
        6813
      ],
      "Initializable": [
        848
      ],
      "OwnableUpgradeable": [
        706
      ],
      "SafeMath": [
        5881
      ],
      "StakingDistributionProxy": [
        7537
      ],
      "StakingProxyFactory": [
        7633
      ]
    },
    "id": 7634,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7539,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:47"
      },
      {
        "absolutePath": "project:/contracts/thegraph/StakingDistributionProxy.sol",
        "file": "./StakingDistributionProxy.sol",
        "id": 7540,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7634,
        "sourceUnit": 7538,
        "src": "56:40:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lib/SafeMath.sol",
        "file": "../lib/SafeMath.sol",
        "id": 7541,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7634,
        "sourceUnit": 5882,
        "src": "97:29:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/thegraph/IStakingProxyFactory.sol",
        "file": "./IStakingProxyFactory.sol",
        "id": 7542,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7634,
        "sourceUnit": 6814,
        "src": "127:36:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 7543,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7634,
        "sourceUnit": 849,
        "src": "164:75:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7544,
              "name": "IStakingProxyFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6813,
              "src": "273:20:47"
            },
            "id": 7545,
            "nodeType": "InheritanceSpecifier",
            "src": "273:20:47"
          },
          {
            "baseName": {
              "id": 7546,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 848,
              "src": "294:13:47"
            },
            "id": 7547,
            "nodeType": "InheritanceSpecifier",
            "src": "294:13:47"
          }
        ],
        "canonicalName": "StakingProxyFactory",
        "contractDependencies": [
          7537
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7633,
        "linearizedBaseContracts": [
          7633,
          848,
          6813
        ],
        "name": "StakingProxyFactory",
        "nameLocation": "250:19:47",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 7550,
            "libraryName": {
              "id": 7548,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5881,
              "src": "319:8:47"
            },
            "nodeType": "UsingForDirective",
            "src": "313:27:47",
            "typeName": {
              "id": 7549,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "332:7:47",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 7554,
            "mutability": "mutable",
            "name": "stakingAddress",
            "nameLocation": "425:14:47",
            "nodeType": "VariableDeclaration",
            "scope": 7633,
            "src": "397:42:47",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 7553,
              "keyType": {
                "id": 7551,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "405:7:47",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "397:27:47",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 7552,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "416:7:47",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7556,
            "mutability": "mutable",
            "name": "configAddress",
            "nameLocation": "463:13:47",
            "nodeType": "VariableDeclaration",
            "scope": 7633,
            "src": "447:29:47",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7555,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "447:7:47",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7558,
            "mutability": "mutable",
            "name": "hamsterPoolAddress",
            "nameLocation": "499:18:47",
            "nodeType": "VariableDeclaration",
            "scope": 7633,
            "src": "483:34:47",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7557,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "483:7:47",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7575,
              "nodeType": "Block",
              "src": "616:97:47",
              "statements": [
                {
                  "expression": {
                    "id": 7569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7567,
                      "name": "configAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7556,
                      "src": "626:13:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7568,
                      "name": "_configAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7560,
                      "src": "642:14:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "626:30:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7570,
                  "nodeType": "ExpressionStatement",
                  "src": "626:30:47"
                },
                {
                  "expression": {
                    "id": 7573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7571,
                      "name": "hamsterPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7558,
                      "src": "666:18:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 7572,
                      "name": "_hamsterPoolAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7562,
                      "src": "687:19:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "666:40:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7574,
                  "nodeType": "ExpressionStatement",
                  "src": "666:40:47"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 7576,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 7565,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 7564,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 750,
                  "src": "604:11:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "604:11:47"
              }
            ],
            "name": "initialize",
            "nameLocation": "534:10:47",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7560,
                  "mutability": "mutable",
                  "name": "_configAddress",
                  "nameLocation": "553:14:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 7576,
                  "src": "545:22:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7562,
                  "mutability": "mutable",
                  "name": "_hamsterPoolAddress",
                  "nameLocation": "576:19:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 7576,
                  "src": "568:27:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "544:52:47"
            },
            "returnParameters": {
              "id": 7566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "616:0:47"
            },
            "scope": 7633,
            "src": "525:188:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6805
            ],
            "body": {
              "id": 7618,
              "nodeType": "Block",
              "src": "836:374:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 7583,
                            "name": "stakingAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7554,
                            "src": "854:14:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 7585,
                          "indexExpression": {
                            "id": 7584,
                            "name": "_indexerWalletAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7578,
                            "src": "869:21:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "854:37:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 7588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "903:1:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "895:7:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 7586,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "895:7:47",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 7589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "895:10:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "854:51:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206164647265737320686173206265656e20706c6564676564",
                        "id": 7591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "907:31:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d7cd99baf962bf0ca528a755262bb978ede327c758a06ecfaf41cb184445ae",
                          "typeString": "literal_string \"This address has been pledged\""
                        },
                        "value": "This address has been pledged"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d7cd99baf962bf0ca528a755262bb978ede327c758a06ecfaf41cb184445ae",
                          "typeString": "literal_string \"This address has been pledged\""
                        }
                      ],
                      "id": 7582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "846:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "846:93:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7593,
                  "nodeType": "ExpressionStatement",
                  "src": "846:93:47"
                },
                {
                  "assignments": [
                    7596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7596,
                      "mutability": "mutable",
                      "name": "stakingDistribution",
                      "nameLocation": "974:19:47",
                      "nodeType": "VariableDeclaration",
                      "scope": 7618,
                      "src": "949:44:47",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingDistributionProxy_$7537",
                        "typeString": "contract StakingDistributionProxy"
                      },
                      "typeName": {
                        "id": 7595,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7594,
                          "name": "StakingDistributionProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7537,
                          "src": "949:24:47"
                        },
                        "referencedDeclaration": 7537,
                        "src": "949:24:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingDistributionProxy_$7537",
                          "typeString": "contract StakingDistributionProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7602,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 7600,
                        "name": "_indexerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7578,
                        "src": "1025:21:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "996:28:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$returns$_t_contract$_StakingDistributionProxy_$7537_$",
                        "typeString": "function (address) payable returns (contract StakingDistributionProxy)"
                      },
                      "typeName": {
                        "id": 7598,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7597,
                          "name": "StakingDistributionProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7537,
                          "src": "1000:24:47"
                        },
                        "referencedDeclaration": 7537,
                        "src": "1000:24:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingDistributionProxy_$7537",
                          "typeString": "contract StakingDistributionProxy"
                        }
                      }
                    },
                    "id": 7601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "996:51:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingDistributionProxy_$7537",
                      "typeString": "contract StakingDistributionProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "949:98:47"
                },
                {
                  "expression": {
                    "id": 7609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7603,
                        "name": "stakingAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7554,
                        "src": "1057:14:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 7605,
                      "indexExpression": {
                        "id": 7604,
                        "name": "_indexerWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7578,
                        "src": "1072:21:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1057:37:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 7606,
                          "name": "stakingDistribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7596,
                          "src": "1097:19:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingDistributionProxy_$7537",
                            "typeString": "contract StakingDistributionProxy"
                          }
                        },
                        "id": 7607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getProxyAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6907,
                        "src": "1097:35:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 7608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1097:37:47",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1057:77:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7610,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:77:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7614,
                        "name": "configAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7556,
                        "src": "1170:13:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 7615,
                        "name": "hamsterPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7558,
                        "src": "1184:18:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7611,
                        "name": "stakingDistribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7596,
                        "src": "1144:19:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingDistributionProxy_$7537",
                          "typeString": "contract StakingDistributionProxy"
                        }
                      },
                      "id": 7613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_init",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6864,
                      "src": "1144:25:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 7616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1144:59:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7617,
                  "nodeType": "ExpressionStatement",
                  "src": "1144:59:47"
                }
              ]
            },
            "functionSelector": "4a4cef40",
            "id": 7619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createStakingContract",
            "nameLocation": "768:21:47",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7580,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "828:8:47"
            },
            "parameters": {
              "id": 7579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7578,
                  "mutability": "mutable",
                  "name": "_indexerWalletAddress",
                  "nameLocation": "798:21:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 7619,
                  "src": "790:29:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "789:31:47"
            },
            "returnParameters": {
              "id": 7581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:0:47"
            },
            "scope": 7633,
            "src": "759:451:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6812
            ],
            "body": {
              "id": 7631,
              "nodeType": "Block",
              "src": "1313:61:47",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 7627,
                      "name": "stakingAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7554,
                      "src": "1330:14:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 7629,
                    "indexExpression": {
                      "id": 7628,
                      "name": "_indexerWalletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7621,
                      "src": "1345:21:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1330:37:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7626,
                  "id": 7630,
                  "nodeType": "Return",
                  "src": "1323:44:47"
                }
              ]
            },
            "functionSelector": "7465cf97",
            "id": 7632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingAddress",
            "nameLocation": "1225:17:47",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7623,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1286:8:47"
            },
            "parameters": {
              "id": 7622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7621,
                  "mutability": "mutable",
                  "name": "_indexerWalletAddress",
                  "nameLocation": "1251:21:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 7632,
                  "src": "1243:29:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1242:31:47"
            },
            "returnParameters": {
              "id": 7626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7632,
                  "src": "1304:7:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1303:9:47"
            },
            "scope": 7633,
            "src": "1216:158:47",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7634,
        "src": "241:1136:47",
        "usedErrors": []
      }
    ],
    "src": "32:1346:47"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xeFF0ed9Fc8276Fcf4eda2e012dD065A3DC18591D",
      "transactionHash": "0x49dbc3303601ec7aaa5154306aed0b513e328c18df54a5bb739cd19e59d02e89"
    }
  },
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-29T07:08:55.660Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}